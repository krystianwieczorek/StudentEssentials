{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var updateGroupAction = function updateGroupAction(groupId) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(dispatch({\n              type: \"UPDATEGROUP\",\n              groupId: groupId\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["D:/Projects/StudentEssentials/app/store/actions/updateGroupAction.js"],"names":["updateGroupAction","groupId","dispatch","type"],"mappings":";AAAA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,OAAD;AAAA,SAAa,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACtCA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAE,aAAR;AAAuBF,cAAAA,OAAO,EAAPA;AAAvB,aAAD,CAD8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;AAAA,CAA1B","sourcesContent":["export const updateGroupAction = (groupId) => async (dispatch) => {\r\n  await dispatch({ type: \"UPDATEGROUP\", groupId });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}