{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\app\\\\views\\\\Register.js\";\nimport React, { useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from \"react-native-paper\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Button } from \"react-native-paper\";\nexport default function Login(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var onChange = _ref2.onChange,\n          onBlur = _ref2.onBlur,\n          value = _ref2.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Email\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"email\",\n    rules: {\n      required: true,\n      pattern: /^\\S+@\\S+\\.\\S+$/\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Email is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref3) {\n      var onChange = _ref3.onChange,\n          onBlur = _ref3.onBlur,\n          value = _ref3.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"First Name\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"firstName\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Email is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref4) {\n      var onChange = _ref4.onChange,\n          onBlur = _ref4.onBlur,\n          value = _ref4.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Last Name\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"lastName\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Email is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref5) {\n      var onChange = _ref5.onChange,\n          onBlur = _ref5.onBlur,\n          value = _ref5.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Password\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"password\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), errors.password && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Password is required.\"), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.button,\n    title: \"Submit\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#e3e3e3\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 30,\n    marginBottom: 25\n  },\n  icon: {\n    textAlign: \"center\"\n  },\n  errorMessage: {\n    marginLeft: 12,\n    color: \"red\"\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: \"#006494\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  signUp: {\n    marginTop: 15,\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  }\n});","map":{"version":3,"sources":["D:/Projects/StudentEssentials/app/views/Register.js"],"names":["React","useEffect","TextInput","FontAwesome","useForm","Controller","Button","Login","navigation","onSubmit","data","console","log","control","handleSubmit","errors","styles","container","onChange","onBlur","value","input","required","pattern","email","errorMessage","password","button","StyleSheet","create","width","height","backgroundColor","text","textAlign","fontSize","marginBottom","icon","marginLeft","color","marginTop","alignContent","marginRight","signUp","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Alert, StyleSheet, Text, View } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Button } from \"react-native-paper\";\r\n\r\nexport default function Login({ navigation }) {\r\n  const onSubmit = (data) => console.log(data);\r\n  const { control, handleSubmit, errors } = useForm();\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Email\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"email\"\r\n        rules={{ required: true, pattern: /^\\S+@\\S+\\.\\S+$/ }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.email && (\r\n        <Text style={styles.errorMessage}>Email is required.</Text>\r\n      )}\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"First Name\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"firstName\"\r\n        rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.email && (\r\n        <Text style={styles.errorMessage}>Email is required.</Text>\r\n      )}\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Last Name\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"lastName\"\r\n        rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.email && (\r\n        <Text style={styles.errorMessage}>Email is required.</Text>\r\n      )}\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Password\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"password\"\r\n        rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.password && (\r\n        <Text style={styles.errorMessage}>Password is required.</Text>\r\n      )}\r\n\r\n      <Button\r\n        mode=\"contained\"\r\n        style={styles.button}\r\n        title=\"Submit\"\r\n        onPress={handleSubmit(onSubmit)}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    marginBottom: 25,\r\n  },\r\n  icon: {\r\n    textAlign: \"center\",\r\n  },\r\n  errorMessage: {\r\n    marginLeft: 12,\r\n    color: \"red\",\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#006494\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  signUp: {\r\n    marginTop: 15,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}