{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\app\\\\views\\\\EditUser.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { TextInput, Button, Provider, Portal, Modal, Snackbar, ActivityIndicator } from \"react-native-paper\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { updateUser } from \"../api/updateUser\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { refreshSelector } from \"../store/selectors/globalSelector\";\nimport { refreshAction } from \"../store/actions/refreshAction\";\nexport default function EditUser(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var params = route.params;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visibleSnack = _useState2[0],\n      setVisibleSnack = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var flag = useSelector(refreshSelector);\n  var dispatch = useDispatch();\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisibleSnack(false);\n  };\n\n  var onSubmit = function onSubmit(data) {\n    setIsLoading(true);\n    data.userId = params.userId;\n    data.groupId = params.groupId;\n    updateUser(data).then(function (response) {\n      response.status == \"200\" && setVisibleSnack(true);\n      dispatch(refreshAction(!flag));\n      setTimeout(function () {\n        navigation.navigate(\"UserProfile\", {\n          route: route\n        });\n        clearTimeout();\n      }, 2000);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    style: styles.activityIndicator,\n    size: 50,\n    animating: isLoading,\n    color: \"#006494\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), React.createElement(Snackbar, {\n    visible: visibleSnack,\n    duration: 3000,\n    onDismiss: onDismissSnackBar,\n    style: styles.snackbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.snackbarText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Profile edited correctly!\"))) : React.createElement(React.Fragment, null, React.createElement(FontAwesome5, {\n    style: styles.icon,\n    name: \"user-edit\",\n    size: 50,\n    color: \"#006494\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Edit profile\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var onChange = _ref2.onChange,\n          onBlur = _ref2.onBlur,\n          value = _ref2.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"First Name\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      });\n    },\n    name: \"firstName\",\n    defaultValue: params.firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), errors.firstName && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"First Name is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref3) {\n      var onChange = _ref3.onChange,\n          onBlur = _ref3.onBlur,\n          value = _ref3.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Last Name\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      });\n    },\n    name: \"lastName\",\n    defaultValue: params.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), errors.lastName && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Last Name is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref4) {\n      var onChange = _ref4.onChange,\n          onBlur = _ref4.onBlur,\n          value = _ref4.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Email\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      });\n    },\n    name: \"profesor\",\n    defaultValue: params.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \" Valid email is required.\"), React.createElement(Button, {\n    onPress: handleSubmit(onSubmit),\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Edit\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    backgroundColor: \"#e3e3e3\"\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: \"#006494\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  textModal: {\n    textAlign: \"center\",\n    fontSize: 30\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 30,\n    marginBottom: 25\n  },\n  icon: {\n    textAlign: \"center\"\n  },\n  errorMessage: {\n    marginLeft: 12,\n    color: \"red\"\n  },\n  buttonEdit: {\n    marginTop: 10,\n    backgroundColor: \"#006494\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  modal: {\n    backgroundColor: \"white\",\n    padding: 10,\n    height: \"60%\"\n  },\n  signUp: {\n    marginTop: 15,\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  input: {\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  },\n  snackbar: {\n    backgroundColor: \"#7d0633\"\n  },\n  snackbarText: {\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Projects/StudentEssentials/app/views/EditUser.js"],"names":["React","useState","useForm","Controller","TextInput","Button","Provider","Portal","Modal","Snackbar","ActivityIndicator","DateTimePicker","updateUser","FontAwesome5","useDispatch","useSelector","refreshSelector","refreshAction","EditUser","navigation","route","params","visibleSnack","setVisibleSnack","isLoading","setIsLoading","control","handleSubmit","errors","flag","dispatch","onDismissSnackBar","onSubmit","data","userId","groupId","then","response","status","setTimeout","navigate","clearTimeout","styles","container","activityIndicator","snackbar","snackbarText","icon","text","onChange","onBlur","value","input","firstName","errorMessage","lastName","email","button","color","StyleSheet","create","width","height","justifyContent","backgroundColor","marginTop","alignContent","marginLeft","marginRight","textModal","textAlign","fontSize","marginBottom","buttonEdit","modal","padding","signUp","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {\r\n  TextInput,\r\n  Button,\r\n  Provider,\r\n  Portal,\r\n  Modal,\r\n  Snackbar,\r\n  ActivityIndicator,\r\n} from \"react-native-paper\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { updateUser } from \"../api/updateUser\";\r\nimport { FontAwesome5 } from \"@expo/vector-icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { refreshSelector } from \"../store/selectors/globalSelector\";\r\nimport { refreshAction } from \"../store/actions/refreshAction\";\r\n\r\nexport default function EditUser({ navigation, route }) {\r\n  const { params } = route;\r\n  const [visibleSnack, setVisibleSnack] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { control, handleSubmit, errors } = useForm();\r\n  const flag = useSelector(refreshSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDismissSnackBar = () => setVisibleSnack(false);\r\n\r\n  const onSubmit = (data) => {\r\n    setIsLoading(true);\r\n    data.userId = params.userId;\r\n    data.groupId = params.groupId;\r\n    updateUser(data).then((response) => {\r\n      response.status == \"200\" && setVisibleSnack(true);\r\n      dispatch(refreshAction(!flag));\r\n      setTimeout(() => {\r\n        navigation.navigate(\"UserProfile\", { route });\r\n        clearTimeout();\r\n      }, 2000);\r\n    });\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      {isLoading ? (\r\n        <View style={styles.container}>\r\n          <ActivityIndicator\r\n            style={styles.activityIndicator}\r\n            size={50}\r\n            animating={isLoading}\r\n            color=\"#006494\"\r\n          />\r\n          <Snackbar\r\n            visible={visibleSnack}\r\n            duration={3000}\r\n            onDismiss={onDismissSnackBar}\r\n            style={styles.snackbar}\r\n          >\r\n            <Text style={styles.snackbarText}>Profile edited correctly!</Text>\r\n          </Snackbar>\r\n        </View>\r\n      ) : (\r\n        <>\r\n          <FontAwesome5\r\n            style={styles.icon}\r\n            name=\"user-edit\"\r\n            size={50}\r\n            color=\"#006494\"\r\n          />\r\n          <Text style={styles.text}>Edit profile</Text>\r\n\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, onBlur, value }) => (\r\n              <TextInput\r\n                style={styles.input}\r\n                label=\"First Name\"\r\n                mode=\"outlined\"\r\n                onBlur={onBlur}\r\n                onChangeText={(value) => onChange(value)}\r\n                value={value}\r\n              />\r\n            )}\r\n            name=\"firstName\"\r\n            // rules={{ required: true }}\r\n            defaultValue={params.firstName}\r\n          />\r\n          {errors.firstName && (\r\n            <Text style={styles.errorMessage}>First Name is required.</Text>\r\n          )}\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, onBlur, value }) => (\r\n              <TextInput\r\n                style={styles.input}\r\n                label=\"Last Name\"\r\n                mode=\"outlined\"\r\n                onBlur={onBlur}\r\n                onChangeText={(value) => onChange(value)}\r\n                value={value}\r\n              />\r\n            )}\r\n            name=\"lastName\"\r\n            // rules={{ required: true }}\r\n            defaultValue={params.lastName}\r\n          />\r\n          {errors.lastName && (\r\n            <Text style={styles.errorMessage}>Last Name is required.</Text>\r\n          )}\r\n          <Controller\r\n            control={control}\r\n            render={({ onChange, onBlur, value }) => (\r\n              <TextInput\r\n                style={styles.input}\r\n                label=\"Email\"\r\n                mode=\"outlined\"\r\n                onBlur={onBlur}\r\n                onChangeText={(value) => onChange(value)}\r\n                value={value}\r\n              />\r\n            )}\r\n            name=\"profesor\"\r\n            // rules={{ required: true }}\r\n            defaultValue={params.email}\r\n          />\r\n          {errors.email && (\r\n            <Text style={styles.errorMessage}> Valid email is required.</Text>\r\n          )}\r\n\r\n          <Button onPress={handleSubmit(onSubmit)} style={styles.button}>\r\n            <Text style={{ color: \"white\" }}>Edit</Text>\r\n          </Button>\r\n        </>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#006494\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  textModal: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    marginBottom: 25,\r\n  },\r\n  icon: {\r\n    textAlign: \"center\",\r\n  },\r\n  errorMessage: {\r\n    marginLeft: 12,\r\n    color: \"red\",\r\n  },\r\n  buttonEdit: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#006494\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  modal: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    height: \"60%\",\r\n  },\r\n  signUp: {\r\n    marginTop: 15,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n  snackbar: {\r\n    backgroundColor: \"#7d0633\",\r\n  },\r\n  snackbarText: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}