{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var updateGroupAction = function updateGroupAction(groupId) {\n  return _regeneratorRuntime.async(function updateGroupAction$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(dispatch({\n            type: \"UPDATEGROUP\",\n            groupId: groupId\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["D:/Projects/StudentEssentials/app/store/actions/updateGroupAction.js"],"names":["updateGroupAction","groupId","dispatch","type"],"mappings":";AAAA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACzBC,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAE,aAAR;AAAuBF,YAAAA,OAAO,EAAPA;AAAvB,WAAD,CADiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["export const updateGroupAction = async (groupId) => {\r\n  await dispatch({ type: \"UPDATEGROUP\", groupId });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}