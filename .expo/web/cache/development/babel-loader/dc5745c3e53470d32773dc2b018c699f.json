{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\app\\\\views\\\\Register.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Picker } from \"@react-native-community/picker\";\nimport { TextInput } from \"react-native-paper\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Button, Modal, Portal, Provider, Snackbar } from \"react-native-paper\";\nimport { Fontisto } from \"@expo/vector-icons\";\nimport { getAllGroups } from \"../api/getAllGroups\";\nimport { addNewUser } from \"../api/addNewUser\";\nexport default function Register(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      groups = _useState6[0],\n      setGroups = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      visibleSNack = _useState8[0],\n      setVisibleSnack = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputInfo = _useState10[0],\n      setInputInfo = _useState10[1];\n\n  var showModal = function showModal() {\n    return setVisible(true);\n  };\n\n  var hideModal = function hideModal() {\n    return setVisible(false);\n  };\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n\n  var onSubmit = function onSubmit(data) {\n    addNewUser(data).then(function (response) {\n      response.status == \"200\" && setVisibleSnack(true);\n      setTimeout(function () {\n        navigation.navigate(\"Login\");\n        clearTimeout();\n      }, 2000);\n    });\n  };\n\n  useEffect(function () {\n    getAllGroups().then(function (response) {\n      return setGroups(response.data);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Sign up \", React.createElement(Fontisto, {\n    name: \"unlocked\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), React.createElement(Snackbar, {\n    visible: visibleSNack,\n    duration: 3000,\n    onDismiss: onDismissSnackBar,\n    style: styles.snackbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.snackbarText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Now u can Sign In!\")), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var onChange = _ref2.onChange,\n          onBlur = _ref2.onBlur,\n          value = _ref2.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Email\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"email\",\n    rules: {\n      required: true,\n      pattern: /^\\S+@\\S+\\.\\S+$/\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Email is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref3) {\n      var onChange = _ref3.onChange,\n          onBlur = _ref3.onBlur,\n          value = _ref3.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"First Name\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"firstName\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Email is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref4) {\n      var onChange = _ref4.onChange,\n          onBlur = _ref4.onBlur,\n          value = _ref4.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Last Name\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"lastName\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Email is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref5) {\n      var onChange = _ref5.onChange,\n          onBlur = _ref5.onBlur,\n          value = _ref5.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Password\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"password\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }), errors.password && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Password is required.\"), React.createElement(TextInput, {\n    style: styles.input,\n    label: \"Group Name\",\n    mode: \"outlined\",\n    disabled: true,\n    onChangeText: function onChangeText(value) {\n      return onChange(value);\n    },\n    value: (inputInfo == null ? void 0 : inputInfo.name) == undefined ? \"I will choose or create group later\" : inputInfo == null ? void 0 : inputInfo.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), React.createElement(Controller, {\n    control: control,\n    render: function render() {\n      return React.createElement(Provider, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, React.createElement(Portal, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }\n      }, React.createElement(Modal, {\n        visible: visible,\n        onDismiss: hideModal,\n        contentContainerStyle: styles.modal,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, React.createElement(Controller, {\n        control: control,\n        render: function render(_ref6) {\n          var onChange = _ref6.onChange,\n              onBlur = _ref6.onBlur,\n              value = _ref6.value;\n          return React.createElement(Picker, {\n            selectedValue: selectedValue,\n            style: styles.picker,\n            onValueChange: function onValueChange(itemValue, itemIndex) {\n              onChange(itemValue);\n              setSelectedValue(itemValue);\n              setInputInfo(groups[itemValue - 1]);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }\n          }, React.createElement(Picker.Item, {\n            label: \"I will choose or create group later\",\n            value: null,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 23\n            }\n          }), groups == null ? void 0 : groups.map(function (item, key) {\n            return React.createElement(Picker.Item, {\n              label: item.name,\n              value: item.groupId,\n              key: key,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 25\n              }\n            });\n          }));\n        },\n        name: \"groupId\",\n        defaultValue: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }))), React.createElement(Button, {\n        mode: \"contained\",\n        style: styles.button,\n        title: \"Submit\",\n        onPress: handleSubmit(onSubmit),\n        onPress: showModal,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#006494\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, \"Choose Group\")), errors.group && React.createElement(Text, {\n        style: styles.errorMessage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }\n      }, \"Group is required.\"), React.createElement(Button, {\n        mode: \"contained\",\n        style: styles.buttonSignUp,\n        title: \"Submit\",\n        onPress: handleSubmit(onSubmit),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, \"Sign Up\"));\n    },\n    name: \"groupId\",\n    defaultValue: null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#e3e3e3\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 30,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  icon: {\n    textAlign: \"center\"\n  },\n  errorMessage: {\n    marginLeft: 12,\n    color: \"red\"\n  },\n  button: {\n    marginTop: 15,\n    backgroundColor: \"white\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  buttonSignUp: {\n    marginTop: 15,\n    backgroundColor: \"#006494\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  signUp: {\n    marginTop: 15,\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  },\n  disabledInput: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10\n  },\n  modal: {\n    backgroundColor: \"white\",\n    padding: 10\n  },\n  snackbar: {\n    backgroundColor: \"#7d0633\"\n  },\n  snackbarText: {\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Projects/StudentEssentials/app/views/Register.js"],"names":["React","useEffect","useState","Picker","TextInput","FontAwesome","useForm","Controller","Button","Modal","Portal","Provider","Snackbar","Fontisto","getAllGroups","addNewUser","Register","navigation","selectedValue","setSelectedValue","visible","setVisible","groups","setGroups","visibleSNack","setVisibleSnack","inputInfo","setInputInfo","showModal","hideModal","control","handleSubmit","errors","onDismissSnackBar","onSubmit","data","then","response","status","setTimeout","navigate","clearTimeout","styles","container","text","snackbar","snackbarText","onChange","onBlur","value","input","required","pattern","email","errorMessage","password","name","undefined","modal","picker","itemValue","itemIndex","map","item","key","groupId","button","color","group","buttonSignUp","StyleSheet","create","width","height","backgroundColor","textAlign","fontSize","marginTop","marginBottom","icon","marginLeft","alignContent","marginRight","signUp","padding","borderRadius","disabledInput"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Alert, StyleSheet, Text, View } from \"react-native\";\r\nimport { Picker } from \"@react-native-community/picker\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Button, Modal, Portal, Provider, Snackbar } from \"react-native-paper\";\r\nimport { Fontisto } from \"@expo/vector-icons\";\r\nimport { getAllGroups } from \"../api/getAllGroups\";\r\nimport { addNewUser } from \"../api/addNewUser\";\r\n\r\nexport default function Register({ navigation }) {\r\n  const [selectedValue, setSelectedValue] = useState();\r\n  const [visible, setVisible] = useState(false);\r\n  const [groups, setGroups] = useState();\r\n  const [visibleSNack, setVisibleSnack] = useState(false);\r\n  const [inputInfo, setInputInfo] = useState();\r\n  const showModal = () => setVisible(true);\r\n  const hideModal = () => setVisible(false);\r\n\r\n  const { control, handleSubmit, errors } = useForm();\r\n\r\n  const onDismissSnackBar = () => setVisible(false);\r\n\r\n  const onSubmit = (data) => {\r\n    addNewUser(data).then((response) => {\r\n      response.status == \"200\" && setVisibleSnack(true);\r\n      setTimeout(() => {\r\n        navigation.navigate(\"Login\");\r\n        clearTimeout();\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllGroups().then((response) => setGroups(response.data));\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>\r\n        Sign up <Fontisto name=\"unlocked\" size={24} color=\"black\" />\r\n      </Text>\r\n      <Snackbar\r\n        visible={visibleSNack}\r\n        duration={3000}\r\n        onDismiss={onDismissSnackBar}\r\n        style={styles.snackbar}\r\n      >\r\n        <Text style={styles.snackbarText}>Now u can Sign In!</Text>\r\n      </Snackbar>\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Email\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"email\"\r\n        rules={{ required: true, pattern: /^\\S+@\\S+\\.\\S+$/ }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.email && (\r\n        <Text style={styles.errorMessage}>Email is required.</Text>\r\n      )}\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"First Name\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"firstName\"\r\n        rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.email && (\r\n        <Text style={styles.errorMessage}>Email is required.</Text>\r\n      )}\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Last Name\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"lastName\"\r\n        rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.email && (\r\n        <Text style={styles.errorMessage}>Email is required.</Text>\r\n      )}\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Password\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"password\"\r\n        rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.password && (\r\n        <Text style={styles.errorMessage}>Password is required.</Text>\r\n      )}\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        label=\"Group Name\"\r\n        mode=\"outlined\"\r\n        disabled\r\n        onChangeText={(value) => onChange(value)}\r\n        value={\r\n          inputInfo?.name == undefined\r\n            ? \"I will choose or create group later\"\r\n            : inputInfo?.name\r\n        }\r\n      />\r\n\r\n      <Controller\r\n        control={control}\r\n        render={() => (\r\n          <Provider>\r\n            <Portal>\r\n              <Modal\r\n                visible={visible}\r\n                onDismiss={hideModal}\r\n                contentContainerStyle={styles.modal}\r\n              >\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, onBlur, value }) => (\r\n                    <Picker\r\n                      selectedValue={selectedValue}\r\n                      style={styles.picker}\r\n                      onValueChange={(itemValue, itemIndex) => {\r\n                        onChange(itemValue);\r\n                        setSelectedValue(itemValue);\r\n                        setInputInfo(groups[itemValue - 1]);\r\n                      }}\r\n                    >\r\n                      <Picker.Item\r\n                        label=\"I will choose or create group later\"\r\n                        value={null}\r\n                      />\r\n                      {groups?.map((item, key) => (\r\n                        <Picker.Item\r\n                          label={item.name}\r\n                          value={item.groupId}\r\n                          key={key}\r\n                        />\r\n                      ))}\r\n                    </Picker>\r\n                  )}\r\n                  name=\"groupId\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Modal>\r\n            </Portal>\r\n            <Button\r\n              mode=\"contained\"\r\n              style={styles.button}\r\n              title=\"Submit\"\r\n              onPress={handleSubmit(onSubmit)}\r\n              onPress={showModal}\r\n            >\r\n              <Text style={{ color: \"#006494\" }}>Choose Group</Text>\r\n            </Button>\r\n            {errors.group && (\r\n              <Text style={styles.errorMessage}>Group is required.</Text>\r\n            )}\r\n            <Button\r\n              mode=\"contained\"\r\n              style={styles.buttonSignUp}\r\n              title=\"Submit\"\r\n              onPress={handleSubmit(onSubmit)}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Provider>\r\n        )}\r\n        name=\"groupId\"\r\n        // rules={{ required: true }}\r\n        defaultValue={null}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  icon: {\r\n    textAlign: \"center\",\r\n  },\r\n  errorMessage: {\r\n    marginLeft: 12,\r\n    color: \"red\",\r\n  },\r\n  button: {\r\n    marginTop: 15,\r\n    backgroundColor: \"white\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  buttonSignUp: {\r\n    marginTop: 15,\r\n    backgroundColor: \"#006494\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  signUp: {\r\n    marginTop: 15,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n  disabledInput: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n  },\r\n  modal: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n  },\r\n  snackbar: {\r\n    backgroundColor: \"#7d0633\",\r\n  },\r\n  snackbarText: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}