{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\app\\\\views\\\\AddGroup.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { DatePickerIOS } from \"react-native-web/dist/index\";\nimport { TextInput } from \"react-native-paper\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Button, Snackbar, Provider, Portal, Modal } from \"react-native-paper\";\nimport { authClient } from \"../api/authClient\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { DayEnum } from \"../common/DayEnum\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { addNewSubject } from \"../api/addNewSubject\";\nimport { useSelector } from \"react-redux\";\nimport { userIdSelector } from \"../store/selectors/globalSelector\";\nimport { addNewGroup } from \"../api/addNewGroup\";\nexport default function AddGroup(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var userId = useSelector(userIdSelector);\n\n  var onSubmit = function onSubmit(data) {\n    data.userId = userId;\n    addNewGroup(data).then(function (response) {\n      response.status == \"200\" && setVisible(true);\n      setTimeout(function () {\n        navigation.navigate(\"Group\", {\n          route: route\n        });\n        clearTimeout();\n      }, 2000);\n    });\n  };\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(Snackbar, {\n    visible: visible,\n    duration: 3000,\n    onDismiss: onDismissSnackBar,\n    style: styles.snackbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.snackbarText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Group added correctly!\")), React.createElement(MaterialIcons, {\n    style: styles.icon,\n    name: \"group-add\",\n    size: 50,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"New Group\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var onChange = _ref2.onChange,\n          onBlur = _ref2.onBlur,\n          value = _ref2.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Name\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"name\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), errors.name && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Name is required.\"), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.buttonAdd,\n    title: \"Submit\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Add\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    backgroundColor: \"#e3e3e3\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 30,\n    marginBottom: 25\n  },\n  icon: {\n    textAlign: \"center\"\n  },\n  errorMessage: {\n    marginLeft: 12,\n    color: \"red\"\n  },\n  button: {\n    marginTop: 10,\n    backgroundColor: \"#006494\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  signUp: {\n    marginTop: 15,\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  buttonAdd: {\n    marginTop: 15,\n    backgroundColor: \"#006494\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  input: {\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  },\n  snackbar: {\n    backgroundColor: \"#7d0633\"\n  },\n  snackbarText: {\n    textAlign: \"center\"\n  },\n  button: {\n    marginTop: 15,\n    backgroundColor: \"white\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  }\n});","map":{"version":3,"sources":["D:/Projects/StudentEssentials/app/views/AddGroup.js"],"names":["React","useState","useEffect","DatePickerIOS","TextInput","FontAwesome","useForm","Controller","Button","Snackbar","Provider","Portal","Modal","authClient","AsyncStorage","DayEnum","MaterialIcons","addNewSubject","useSelector","userIdSelector","addNewGroup","AddGroup","navigation","visible","setVisible","control","handleSubmit","errors","userId","onSubmit","data","then","response","status","setTimeout","navigate","route","clearTimeout","onDismissSnackBar","styles","container","snackbar","snackbarText","icon","text","onChange","onBlur","value","input","name","errorMessage","buttonAdd","StyleSheet","create","width","height","justifyContent","backgroundColor","textAlign","fontSize","marginBottom","marginLeft","color","button","marginTop","alignContent","marginRight","signUp","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Alert, StyleSheet, Text, View, DatePickerIOS } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Button, Snackbar, Provider, Portal, Modal } from \"react-native-paper\";\r\nimport { authClient } from \"../api/authClient\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { DayEnum } from \"../common/DayEnum\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport { addNewSubject } from \"../api/addNewSubject\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { userIdSelector } from \"../store/selectors/globalSelector\";\r\nimport { addNewGroup } from \"../api/addNewGroup\";\r\n\r\nexport default function AddGroup({ navigation }) {\r\n  const [visible, setVisible] = useState(false);\r\n  const { control, handleSubmit, errors } = useForm();\r\n\r\n  const userId = useSelector(userIdSelector);\r\n\r\n  const onSubmit = (data) => {\r\n    data.userId = userId;\r\n    addNewGroup(data).then((response) => {\r\n      response.status == \"200\" && setVisible(true);\r\n      setTimeout(() => {\r\n        navigation.navigate(\"Group\", { route });\r\n        clearTimeout();\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const onDismissSnackBar = () => setVisible(false);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Snackbar\r\n        visible={visible}\r\n        duration={3000}\r\n        onDismiss={onDismissSnackBar}\r\n        style={styles.snackbar}\r\n      >\r\n        <Text style={styles.snackbarText}>Group added correctly!</Text>\r\n      </Snackbar>\r\n      <MaterialIcons\r\n        style={styles.icon}\r\n        name=\"group-add\"\r\n        size={50}\r\n        color=\"black\"\r\n      />\r\n      <Text style={styles.text}>New Group</Text>\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Name\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"name\"\r\n        // rules={{ required: true}}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.name && (\r\n        <Text style={styles.errorMessage}>Name is required.</Text>\r\n      )}\r\n      <Button\r\n        mode=\"contained\"\r\n        style={styles.buttonAdd}\r\n        title=\"Submit\"\r\n        onPress={handleSubmit(onSubmit)}\r\n      >\r\n        Add\r\n      </Button>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    marginBottom: 25,\r\n  },\r\n  icon: {\r\n    textAlign: \"center\",\r\n  },\r\n  errorMessage: {\r\n    marginLeft: 12,\r\n    color: \"red\",\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#006494\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  signUp: {\r\n    marginTop: 15,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  buttonAdd: {\r\n    marginTop: 15,\r\n    backgroundColor: \"#006494\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  input: {\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n  snackbar: {\r\n    backgroundColor: \"#7d0633\",\r\n  },\r\n  snackbarText: {\r\n    textAlign: \"center\",\r\n  },\r\n  button: {\r\n    marginTop: 15,\r\n    backgroundColor: \"white\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}