{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\app\\\\views\\\\Group.js\";\nimport * as React from \"react\";\nimport { Appbar, Button, Provider, Portal, Modal } from \"react-native-paper\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { Chip, Snackbar, List } from \"react-native-paper\";\nimport { useState, useEffect } from \"react\";\nimport { getShedulePerDay } from \"../api/getShedulePerDay\";\nimport { DayEnum } from \"../common/DayEnum\";\nimport { ActivityIndicator, Card, Avatar, Title, Paragraph } from \"react-native-paper\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { getAllGroups } from \"../api/getAllGroups\";\nimport { userIdSelector } from \"../store/selectors/globalSelector\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserProfile } from \"../api/getUserProfile\";\nimport { getGroup } from \"../api/getGroup\";\nimport { updateUser } from \"../api/updateUser\";\nimport { updateGroupAction } from \"../store/actions/updateGroupAction\";\nimport { updateGroupSelector } from \"../store/selectors/globalSelector\";\nexport default function Group(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var showModal = function showModal() {\n    return setVisible(true);\n  };\n\n  var hideModal = function hideModal() {\n    return setVisible(false);\n  };\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedValue = _useState4[0],\n      setSelectedValue = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      groups = _useState6[0],\n      setGroups = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      groupProfile = _useState10[0],\n      setGroupProfile = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      visibleSNack = _useState12[0],\n      setVisibleSnack = _useState12[1];\n\n  var userId = useSelector(userIdSelector);\n  var groupId = useSelector(updateGroupSelector);\n  var dispatch = useDispatch();\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n\n  var onSubmit = function onSubmit(data) {\n    setVisible(false);\n    data.groupId = selectedValue;\n    data.userId = userId;\n    updateUser(data).then(function (response) {\n      response.status == \"200\" && setVisibleSnack(true);\n      dispatch(updateGroupAction(selectedValue));\n    });\n  };\n\n  useEffect(function () {\n    setIsLoading(true);\n    groupId != null && getGroup(groupId).then(function (response) {\n      setGroupProfile(response.data);\n    });\n    setIsLoading(false);\n  }, [groupId, userId, selectedValue]);\n  useEffect(function () {\n    getAllGroups().then(function (response) {\n      return setGroups(response.data);\n    });\n  }, [visible]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, React.createElement(ActivityIndicator, {\n    style: styles.activityIndicator,\n    size: 50,\n    animating: isLoading,\n    color: \"#006494\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#e3e3e3\"\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: 30\n  },\n  textBold: {\n    fontWeight: \"bold\"\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginBottom: 50,\n    backgroundColor: \"black\"\n  },\n  card: {\n    paddingTop: 50,\n    paddingBottom: 50,\n    backgroundColor: \"#e3e3e3\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 30,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  icon: {\n    textAlign: \"center\"\n  },\n  errorMessage: {\n    marginLeft: 12,\n    color: \"red\"\n  },\n  button: {\n    marginTop: 15,\n    backgroundColor: \"white\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  buttonSignUp: {\n    marginTop: 15,\n    backgroundColor: \"#006494\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  signUp: {\n    marginTop: 15,\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  },\n  disabledInput: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10\n  },\n  modal: {\n    backgroundColor: \"white\",\n    padding: 10,\n    height: 400\n  },\n  snackbar: {\n    backgroundColor: \"#7d0633\"\n  },\n  snackbarText: {\n    textAlign: \"center\"\n  },\n  activityIndicator: {\n    width: \"100%\",\n    height: \"80%\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Projects/StudentEssentials/app/views/Group.js"],"names":["React","Appbar","Button","Provider","Portal","Modal","Chip","Snackbar","List","useState","useEffect","getShedulePerDay","DayEnum","ActivityIndicator","Card","Avatar","Title","Paragraph","useForm","Controller","getAllGroups","userIdSelector","useSelector","useDispatch","getUserProfile","getGroup","updateUser","updateGroupAction","updateGroupSelector","Group","navigation","control","handleSubmit","errors","visible","setVisible","showModal","hideModal","selectedValue","setSelectedValue","groups","setGroups","isLoading","setIsLoading","groupProfile","setGroupProfile","visibleSNack","setVisibleSnack","userId","groupId","dispatch","onDismissSnackBar","onSubmit","data","then","response","status","styles","container","activityIndicator","StyleSheet","create","width","height","backgroundColor","title","textAlign","marginBottom","textBold","fontWeight","avatar","marginLeft","marginRight","card","paddingTop","paddingBottom","text","fontSize","marginTop","icon","errorMessage","color","button","alignContent","buttonSignUp","signUp","input","padding","borderRadius","disabledInput","modal","snackbar","snackbarText","justifyContent"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Appbar, Button, Provider, Portal, Modal } from \"react-native-paper\";\r\nimport {\r\n  Alert,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Picker,\r\n} from \"react-native\";\r\nimport { Chip, Snackbar, List } from \"react-native-paper\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getShedulePerDay } from \"../api/getShedulePerDay\";\r\nimport { DayEnum } from \"../common/DayEnum\";\r\nimport {\r\n  ActivityIndicator,\r\n  Card,\r\n  Avatar,\r\n  Title,\r\n  Paragraph,\r\n} from \"react-native-paper\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { getAllGroups } from \"../api/getAllGroups\";\r\nimport { userIdSelector } from \"../store/selectors/globalSelector\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getUserProfile } from \"../api/getUserProfile\";\r\nimport { getGroup } from \"../api/getGroup\";\r\nimport { updateUser } from \"../api/updateUser\";\r\nimport { updateGroupAction } from \"../store/actions/updateGroupAction\";\r\nimport { updateGroupSelector } from \"../store/selectors/globalSelector\";\r\n\r\nexport default function Group({ navigation }) {\r\n  const { control, handleSubmit, errors } = useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const showModal = () => setVisible(true);\r\n  const hideModal = () => setVisible(false);\r\n  const [selectedValue, setSelectedValue] = useState();\r\n  const [groups, setGroups] = useState();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [groupProfile, setGroupProfile] = useState();\r\n  const [visibleSNack, setVisibleSnack] = useState(false);\r\n  const userId = useSelector(userIdSelector);\r\n  const groupId = useSelector(updateGroupSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDismissSnackBar = () => setVisible(false);\r\n\r\n  const onSubmit = (data) => {\r\n    setVisible(false);\r\n    data.groupId = selectedValue;\r\n    data.userId = userId;\r\n    updateUser(data).then((response) => {\r\n      response.status == \"200\" && setVisibleSnack(true);\r\n      dispatch(updateGroupAction(selectedValue));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    groupId != null &&\r\n      getGroup(groupId).then((response) => {\r\n        setGroupProfile(response.data);\r\n      });\r\n    setIsLoading(false);\r\n  }, [groupId, userId, selectedValue]);\r\n\r\n  useEffect(() => {\r\n    getAllGroups().then((response) => setGroups(response.data));\r\n  }, [visible]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ActivityIndicator\r\n        style={styles.activityIndicator}\r\n        size={50}\r\n        animating={isLoading}\r\n        color=\"#006494\"\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n  textBold: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  avatar: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginBottom: 50,\r\n    backgroundColor: \"black\",\r\n  },\r\n  card: {\r\n    paddingTop: 50,\r\n    paddingBottom: 50,\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  icon: {\r\n    textAlign: \"center\",\r\n  },\r\n  errorMessage: {\r\n    marginLeft: 12,\r\n    color: \"red\",\r\n  },\r\n  button: {\r\n    marginTop: 15,\r\n    backgroundColor: \"white\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  buttonSignUp: {\r\n    marginTop: 15,\r\n    backgroundColor: \"#006494\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  signUp: {\r\n    marginTop: 15,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n  disabledInput: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n  },\r\n  modal: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    height: 400,\r\n  },\r\n  snackbar: {\r\n    backgroundColor: \"#7d0633\",\r\n  },\r\n  snackbarText: {\r\n    textAlign: \"center\",\r\n  },\r\n  activityIndicator: {\r\n    width: \"100%\",\r\n    height: \"80%\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}