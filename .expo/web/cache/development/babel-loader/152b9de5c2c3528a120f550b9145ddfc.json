{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\App.js\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport configureStore from \"./app/store/store\";\nimport { getDailyreports } from \"./app/api/apiTest\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./app/views/Home\";\nimport Messenger from \"./app/views/Messenger\";\nimport Login from \"./app/views/Login\";\nimport Register from \"./app/views/Register\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Menu } from \"./app/views/Menu\";\nimport { Schedule } from \"./app/views/Schedule\";\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\nimport { isSignedInSelector, authSelector } from \"./app/store/selectors/globalSelector\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport UserProfile from \"./app/views/UserProfile\";\nimport AddSubject from \"./app/views/AddSubject\";\nimport Group from \"./app/views/Group\";\nimport AddGroup from \"./app/views/AddGroup\";\nimport UserList from \"./app/views/UserList\";\nimport SujectDetails from \"./app/views/SubjectDetails\";\nimport EditSubject from \"./app/views/EditSubject\";\nimport EditUser from \"./app/views/EditUser\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nvar LoginStackScreen = function LoginStackScreen() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      title: \"Student Essential\",\n      headerStyle: {\n        backgroundColor: \"#006494\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: Register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar MessengerStackScreen = function MessengerStackScreen() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      title: \"Student Essential\",\n      headerStyle: {\n        backgroundColor: \"#006494\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Messenger\",\n    component: Messenger,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar MenuStackScreen = function MenuStackScreen() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      title: \"Student Essential\",\n      headerStyle: {\n        backgroundColor: \"#006494\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Menu\",\n    component: Menu,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"UserProfile\",\n    component: UserProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"EditUser\",\n    component: EditUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar ScheduleStackScreen = function ScheduleStackScreen() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      title: \"Student Essential\",\n      headerStyle: {\n        backgroundColor: \"#006494\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Schedule\",\n    component: Schedule,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AddSubject\",\n    component: AddSubject,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SujectDetails\",\n    component: SujectDetails,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"EditSubject\",\n    component: EditSubject,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar GroupStackScreen = function GroupStackScreen() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      title: \"Student Essential\",\n      headerStyle: {\n        backgroundColor: \"#006494\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Group\",\n    component: Group,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AddGroup\",\n    component: AddGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"UserList\",\n    component: UserList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default function App() {\n  var _this2 = this;\n\n  var isSignedIn = useSelector(isSignedInSelector);\n  var token = useSelector(authSelector);\n  useEffect(function () {\n    var setUserToken = function setUserToken() {\n      return _regeneratorRuntime.async(function setUserToken$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = token != null;\n\n              if (!_context.t0) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"token\", token));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    setUserToken();\n  }, [token]);\n  return React.createElement(PaperProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, isSignedIn ? React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n\n          if (route.name === \"Messenger\") {\n            return React.createElement(Ionicons, {\n              name: \"ios-text\",\n              size: 24,\n              color: color,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 26\n              }\n            });\n          } else if (route.name === \"Schedule\") {\n            return React.createElement(Ionicons, {\n              name: \"md-calendar\",\n              size: 24,\n              color: color,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }\n            });\n          } else if (route.name === \"Login\") {\n            return React.createElement(Entypo, {\n              name: \"login\",\n              size: 24,\n              color: color,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 26\n              }\n            });\n          } else if (route.name === \"Menu\") {\n            return React.createElement(SimpleLineIcons, {\n              name: \"menu\",\n              size: 24,\n              color: color,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }\n            });\n          } else if (route.name === \"Group\") {\n            return React.createElement(FontAwesome, {\n              name: \"group\",\n              size: 24,\n              color: color,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 26\n              }\n            });\n          }\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"#006494\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Schedule\",\n    component: ScheduleStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Group\",\n    component: GroupStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Messenger\",\n    component: MessengerStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Menu\",\n    component: MenuStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  })) : React.createElement(LoginStackScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Projects/StudentEssentials/App.js"],"names":["StatusBar","React","useEffect","useState","Provider","PaperProvider","ReduxProvider","configureStore","getDailyreports","NavigationContainer","createBottomTabNavigator","Home","Messenger","Login","Register","Ionicons","Entypo","FontAwesome","createStackNavigator","Menu","Schedule","SimpleLineIcons","isSignedInSelector","authSelector","useSelector","useDispatch","AsyncStorage","UserProfile","AddSubject","Group","AddGroup","UserList","SujectDetails","EditSubject","EditUser","Tab","Stack","LoginStackScreen","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","MessengerStackScreen","MenuStackScreen","ScheduleStackScreen","GroupStackScreen","App","isSignedIn","token","setUserToken","setItem","route","tabBarIcon","focused","color","size","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport configureStore from \"./app/store/store\";\nimport { getDailyreports } from \"./app/api/apiTest\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./app/views/Home\";\nimport Messenger from \"./app/views/Messenger\";\nimport Login from \"./app/views/Login\";\nimport Register from \"./app/views/Register\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { Menu } from \"./app/views/Menu\";\nimport { Schedule } from \"./app/views/Schedule\";\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\nimport {\n  isSignedInSelector,\n  authSelector,\n} from \"./app/store/selectors/globalSelector\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport UserProfile from \"./app/views/UserProfile\";\nimport AddSubject from \"./app/views/AddSubject\";\nimport Group from \"./app/views/Group\";\nimport AddGroup from \"./app/views/AddGroup\";\nimport UserList from \"./app/views/UserList\";\nimport SujectDetails from \"./app/views/SubjectDetails\";\nimport EditSubject from \"./app/views/EditSubject\";\nimport EditUser from \"./app/views/EditUser\";\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nconst LoginStackScreen = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        title: `Student Essential`,\n        headerStyle: {\n          backgroundColor: \"#006494\",\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n    >\n      <Stack.Screen name=\"Login\" component={Login} />\n      <Stack.Screen name=\"Register\" component={Register} />\n    </Stack.Navigator>\n  );\n};\nconst MessengerStackScreen = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        title: `Student Essential`,\n        headerStyle: {\n          backgroundColor: \"#006494\",\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n    >\n      <Stack.Screen name=\"Messenger\" component={Messenger} />\n    </Stack.Navigator>\n  );\n};\nconst MenuStackScreen = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        title: `Student Essential`,\n        headerStyle: {\n          backgroundColor: \"#006494\",\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n    >\n      <Stack.Screen name=\"Menu\" component={Menu} />\n      <Stack.Screen name=\"UserProfile\" component={UserProfile} />\n      <Stack.Screen name=\"EditUser\" component={EditUser} />\n    </Stack.Navigator>\n  );\n};\nconst ScheduleStackScreen = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        title: `Student Essential`,\n        headerStyle: {\n          backgroundColor: \"#006494\",\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n    >\n      <Stack.Screen name=\"Schedule\" component={Schedule} />\n      <Stack.Screen name=\"AddSubject\" component={AddSubject} />\n      <Stack.Screen name=\"SujectDetails\" component={SujectDetails} />\n      <Stack.Screen name=\"EditSubject\" component={EditSubject} />\n    </Stack.Navigator>\n  );\n};\n\nconst GroupStackScreen = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        title: `Student Essential`,\n        headerStyle: {\n          backgroundColor: \"#006494\",\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n    >\n      <Stack.Screen name=\"Group\" component={Group} />\n      <Stack.Screen name=\"AddGroup\" component={AddGroup} />\n      <Stack.Screen name=\"UserList\" component={UserList} />\n    </Stack.Navigator>\n  );\n};\n\nexport default function App() {\n  const isSignedIn = useSelector(isSignedInSelector);\n  const token = useSelector(authSelector);\n\n  useEffect(() => {\n    const setUserToken = async () => {\n      token != null && (await AsyncStorage.setItem(\"token\", token));\n    };\n    setUserToken();\n  }, [token]);\n\n  return (\n    <PaperProvider>\n      <NavigationContainer>\n        {isSignedIn ? (\n          <Tab.Navigator\n            screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                if (route.name === \"Messenger\") {\n                  return <Ionicons name=\"ios-text\" size={24} color={color} />;\n                } else if (route.name === \"Schedule\") {\n                  return (\n                    <Ionicons name=\"md-calendar\" size={24} color={color} />\n                  );\n                } else if (route.name === \"Login\") {\n                  return <Entypo name=\"login\" size={24} color={color} />;\n                } else if (route.name === \"Menu\") {\n                  return (\n                    <SimpleLineIcons name=\"menu\" size={24} color={color} />\n                  );\n                } else if (route.name === \"Group\") {\n                  return <FontAwesome name=\"group\" size={24} color={color} />;\n                }\n              },\n            })}\n            tabBarOptions={{\n              activeTintColor: \"#006494\",\n              inactiveTintColor: \"gray\",\n            }}\n          >\n            <Tab.Screen name=\"Schedule\" component={ScheduleStackScreen} />\n            <Tab.Screen name=\"Group\" component={GroupStackScreen} />\n            <Tab.Screen name=\"Messenger\" component={MessengerStackScreen} />\n            <Tab.Screen name=\"Menu\" component={MenuStackScreen} />\n          </Tab.Navigator>\n        ) : (\n          <LoginStackScreen />\n        )}\n      </NavigationContainer>\n      <StatusBar style=\"auto\" />\n    </PaperProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}