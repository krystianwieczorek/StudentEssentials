{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\app\\\\views\\\\Group.js\";\nimport * as React from \"react\";\nimport { Appbar, Button, Provider, Portal, Modal } from \"react-native-paper\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Picker } from \"@react-native-community/picker\";\nimport { Chip, Snackbar, List } from \"react-native-paper\";\nimport { useState, useEffect } from \"react\";\nimport { getShedulePerDay } from \"../api/getShedulePerDay\";\nimport { DayEnum } from \"../common/DayEnum\";\nimport { ActivityIndicator, Card, Avatar, Title, Paragraph } from \"react-native-paper\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { getAllGroups } from \"../api/getAllGroups\";\nimport { userIdSelector } from \"../store/selectors/globalSelector\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUserProfile } from \"../api/getUserProfile\";\nimport { getGroup } from \"../api/getGroup\";\nimport { updateUser } from \"../api/updateUser\";\nimport { updateGroupAction } from \"../store/actions/updateGroupAction\";\nimport { updateGroupSelector } from \"../store/selectors/globalSelector\";\nimport { refreshSelector } from \"../store/selectors/globalSelector\";\nexport default function Group(_ref) {\n  var _groupProfile$owner,\n      _groupProfile$owner2,\n      _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var showModal = function showModal() {\n    return setVisible(true);\n  };\n\n  var hideModal = function hideModal() {\n    return setVisible(false);\n  };\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedValue = _useState4[0],\n      setSelectedValue = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      groups = _useState6[0],\n      setGroups = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      groupProfile = _useState10[0],\n      setGroupProfile = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      visibleSNack = _useState12[0],\n      setVisibleSnack = _useState12[1];\n\n  var userId = useSelector(userIdSelector);\n  var groupId = useSelector(updateGroupSelector);\n  var flag = useSelector(refreshSelector);\n  var dispatch = useDispatch();\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n\n  var onSubmit = function onSubmit(data) {\n    setVisible(false);\n    setIsLoading(true);\n    data.groupId = selectedValue;\n    data.userId = userId;\n    updateUser(data).then(function (response) {\n      response.status == \"200\" && setVisibleSnack(true);\n      dispatch(updateGroupAction(selectedValue));\n    });\n  };\n\n  useEffect(function () {\n    setIsLoading(true);\n    groupId != null && getGroup(groupId).then(function (response) {\n      setGroupProfile(response.data);\n      setIsLoading(false);\n    });\n  }, [groupId, userId, flag]);\n  useEffect(function () {\n    getAllGroups().then(function (response) {\n      return setGroups(response.data);\n    });\n  }, [visible]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    style: styles.activityIndicator,\n    size: 50,\n    animating: isLoading,\n    color: \"#006494\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), React.createElement(Snackbar, {\n    visible: visibleSNack,\n    duration: 3000,\n    onDismiss: onDismissSnackBar,\n    style: styles.snackbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.snackbarText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Group changed correctly!\"))) : React.createElement(Card, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Card.Content, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(Avatar.Icon, {\n    style: styles.avatar,\n    size: 100,\n    icon: \"account-group-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), React.createElement(Title, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Group Profile\"), React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textBold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Group name: \"), groupProfile == null ? void 0 : groupProfile.name), React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textBold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"Group ID: \"), groupProfile == null ? void 0 : groupProfile.groupId), React.createElement(Paragraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textBold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"Created by: \"), groupProfile == null ? void 0 : (_groupProfile$owner = groupProfile.owner) == null ? void 0 : _groupProfile$owner.firstName, \" \", groupProfile == null ? void 0 : (_groupProfile$owner2 = groupProfile.owner) == null ? void 0 : _groupProfile$owner2.lastName), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate(\"AddGroup\");\n    },\n    style: styles.buttonCreate,\n    color: \"#006494\",\n    uppercase: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Create Group\")), React.createElement(Button, {\n    color: \"#006494\",\n    uppercase: false,\n    title: \"Submit\",\n    style: styles.buttonChoose,\n    onPress: handleSubmit(onSubmit),\n    onPress: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Choose Group\")), React.createElement(Button, {\n    color: \"#006494\",\n    uppercase: false,\n    title: \"Submit\",\n    style: styles.buttonChoose,\n    onPress: function onPress() {\n      return navigation.navigate(\"UserList\", {\n        groupProfile: groupProfile\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, \"Assigned User\"))), React.createElement(Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, React.createElement(Portal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, React.createElement(Modal, {\n    visible: visible,\n    onDismiss: hideModal,\n    contentContainerStyle: styles.modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, React.createElement(Picker, {\n    selectedValue: selectedValue,\n    style: styles.picker,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      setSelectedValue(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, groups == null ? void 0 : groups.map(function (item, key) {\n    return React.createElement(Picker.Item, {\n      label: item.name,\n      value: item.groupId,\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    });\n  })), React.createElement(Button, {\n    mode: \"contained\",\n    style: styles.buttonChoose,\n    title: \"Submit\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Choose\"))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#e3e3e3\"\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: 30\n  },\n  textBold: {\n    fontWeight: \"bold\"\n  },\n  avatar: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginBottom: 50,\n    backgroundColor: \"#006494\"\n  },\n  card: {\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 30,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  icon: {\n    textAlign: \"center\"\n  },\n  errorMessage: {\n    marginLeft: 12,\n    color: \"red\"\n  },\n  buttonCreate: {\n    marginTop: 15,\n    backgroundColor: \"#006494\",\n    width: \"100%\"\n  },\n  buttonChoose: {\n    marginTop: 15,\n    backgroundColor: \"#006494\",\n    width: \"100%\"\n  },\n  signUp: {\n    marginTop: 15,\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  },\n  disabledInput: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10\n  },\n  modal: {\n    backgroundColor: \"white\",\n    padding: 10,\n    height: \"70%\"\n  },\n  snackbar: {\n    backgroundColor: \"#7d0633\"\n  },\n  snackbarText: {\n    textAlign: \"center\"\n  },\n  activityIndicator: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Projects/StudentEssentials/app/views/Group.js"],"names":["React","Appbar","Button","Provider","Portal","Modal","Picker","Chip","Snackbar","List","useState","useEffect","getShedulePerDay","DayEnum","ActivityIndicator","Card","Avatar","Title","Paragraph","useForm","Controller","getAllGroups","userIdSelector","useSelector","useDispatch","getUserProfile","getGroup","updateUser","updateGroupAction","updateGroupSelector","refreshSelector","Group","navigation","control","handleSubmit","errors","visible","setVisible","showModal","hideModal","selectedValue","setSelectedValue","groups","setGroups","isLoading","setIsLoading","groupProfile","setGroupProfile","visibleSNack","setVisibleSnack","userId","groupId","flag","dispatch","onDismissSnackBar","onSubmit","data","then","response","status","styles","container","activityIndicator","snackbar","snackbarText","card","avatar","title","textBold","name","owner","firstName","lastName","navigate","buttonCreate","color","buttonChoose","modal","picker","itemValue","itemIndex","map","item","key","StyleSheet","create","width","height","backgroundColor","textAlign","marginBottom","fontWeight","marginLeft","marginRight","justifyContent","text","fontSize","marginTop","icon","errorMessage","signUp","input","padding","borderRadius","disabledInput"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Appbar, Button, Provider, Portal, Modal } from \"react-native-paper\";\r\nimport {\r\n  Alert,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-community/picker\";\r\nimport { Chip, Snackbar, List } from \"react-native-paper\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getShedulePerDay } from \"../api/getShedulePerDay\";\r\nimport { DayEnum } from \"../common/DayEnum\";\r\nimport {\r\n  ActivityIndicator,\r\n  Card,\r\n  Avatar,\r\n  Title,\r\n  Paragraph,\r\n} from \"react-native-paper\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { getAllGroups } from \"../api/getAllGroups\";\r\nimport { userIdSelector } from \"../store/selectors/globalSelector\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getUserProfile } from \"../api/getUserProfile\";\r\nimport { getGroup } from \"../api/getGroup\";\r\nimport { updateUser } from \"../api/updateUser\";\r\nimport { updateGroupAction } from \"../store/actions/updateGroupAction\";\r\nimport { updateGroupSelector } from \"../store/selectors/globalSelector\";\r\nimport { refreshSelector } from \"../store/selectors/globalSelector\";\r\n\r\nexport default function Group({ navigation }) {\r\n  const { control, handleSubmit, errors } = useForm();\r\n  const [visible, setVisible] = useState(false);\r\n  const showModal = () => setVisible(true);\r\n  const hideModal = () => setVisible(false);\r\n  const [selectedValue, setSelectedValue] = useState();\r\n  const [groups, setGroups] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [groupProfile, setGroupProfile] = useState();\r\n  const [visibleSNack, setVisibleSnack] = useState(false);\r\n  const userId = useSelector(userIdSelector);\r\n  const groupId = useSelector(updateGroupSelector);\r\n  const flag = useSelector(refreshSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onDismissSnackBar = () => setVisible(false);\r\n\r\n  const onSubmit = (data) => {\r\n    setVisible(false);\r\n    setIsLoading(true);\r\n    data.groupId = selectedValue;\r\n    data.userId = userId;\r\n    updateUser(data).then((response) => {\r\n      response.status == \"200\" && setVisibleSnack(true);\r\n      dispatch(updateGroupAction(selectedValue));\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    groupId != null &&\r\n      getGroup(groupId).then((response) => {\r\n        setGroupProfile(response.data);\r\n        setIsLoading(false);\r\n      });\r\n  }, [groupId, userId, flag]);\r\n\r\n  useEffect(() => {\r\n    getAllGroups().then((response) => setGroups(response.data));\r\n  }, [visible]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {isLoading ? (\r\n        <View style={styles.container}>\r\n          <ActivityIndicator\r\n            style={styles.activityIndicator}\r\n            size={50}\r\n            animating={isLoading}\r\n            color=\"#006494\"\r\n          />\r\n          <Snackbar\r\n            visible={visibleSNack}\r\n            duration={3000}\r\n            onDismiss={onDismissSnackBar}\r\n            style={styles.snackbar}\r\n          >\r\n            <Text style={styles.snackbarText}>Group changed correctly!</Text>\r\n          </Snackbar>\r\n        </View>\r\n      ) : (\r\n        <Card style={styles.card}>\r\n          <Card.Content style={styles.card}>\r\n            <Avatar.Icon\r\n              style={styles.avatar}\r\n              size={100}\r\n              icon=\"account-group-outline\"\r\n            />\r\n            <Title style={styles.title}>Group Profile</Title>\r\n            <Paragraph>\r\n              <Text style={styles.textBold}>Group name: </Text>\r\n              {groupProfile?.name}\r\n            </Paragraph>\r\n            <Paragraph>\r\n              <Text style={styles.textBold}>Group ID: </Text>\r\n              {groupProfile?.groupId}\r\n            </Paragraph>\r\n            <Paragraph>\r\n              <Text style={styles.textBold}>Created by: </Text>\r\n              {groupProfile?.owner?.firstName} {groupProfile?.owner?.lastName}\r\n            </Paragraph>\r\n            <Button\r\n              onPress={() => navigation.navigate(\"AddGroup\")}\r\n              style={styles.buttonCreate}\r\n              color=\"#006494\"\r\n              uppercase={false}\r\n            >\r\n              <Text style={{ color: \"white\" }}>Create Group</Text>\r\n            </Button>\r\n            <Button\r\n              color=\"#006494\"\r\n              uppercase={false}\r\n              title=\"Submit\"\r\n              style={styles.buttonChoose}\r\n              onPress={handleSubmit(onSubmit)}\r\n              onPress={showModal}\r\n            >\r\n              <Text style={{ color: \"white\" }}>Choose Group</Text>\r\n            </Button>\r\n            <Button\r\n              color=\"#006494\"\r\n              uppercase={false}\r\n              title=\"Submit\"\r\n              style={styles.buttonChoose}\r\n              onPress={() => navigation.navigate(\"UserList\", { groupProfile })}\r\n            >\r\n              <Text style={{ color: \"white\" }}>Assigned User</Text>\r\n            </Button>\r\n          </Card.Content>\r\n\r\n          <Provider>\r\n            <Portal>\r\n              <Modal\r\n                visible={visible}\r\n                onDismiss={hideModal}\r\n                contentContainerStyle={styles.modal}\r\n              >\r\n                <Picker\r\n                  selectedValue={selectedValue}\r\n                  style={styles.picker}\r\n                  onValueChange={(itemValue, itemIndex) => {\r\n                    setSelectedValue(itemValue);\r\n                  }}\r\n                >\r\n                  {groups?.map((item, key) => (\r\n                    <Picker.Item\r\n                      label={item.name}\r\n                      value={item.groupId}\r\n                      key={key}\r\n                    />\r\n                  ))}\r\n                </Picker>\r\n                <Button\r\n                  mode=\"contained\"\r\n                  style={styles.buttonChoose}\r\n                  title=\"Submit\"\r\n                  onPress={handleSubmit(onSubmit)}\r\n                >\r\n                  Choose\r\n                </Button>\r\n              </Modal>\r\n            </Portal>\r\n          </Provider>\r\n        </Card>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n  textBold: {\r\n    fontWeight: \"bold\",\r\n  },\r\n  avatar: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginBottom: 50,\r\n    backgroundColor: \"#006494\",\r\n  },\r\n  card: {\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"white\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  icon: {\r\n    textAlign: \"center\",\r\n  },\r\n  errorMessage: {\r\n    marginLeft: 12,\r\n    color: \"red\",\r\n  },\r\n  buttonCreate: {\r\n    marginTop: 15,\r\n    backgroundColor: \"#006494\",\r\n    width: \"100%\",\r\n  },\r\n  buttonChoose: {\r\n    marginTop: 15,\r\n    backgroundColor: \"#006494\",\r\n    width: \"100%\",\r\n  },\r\n  signUp: {\r\n    marginTop: 15,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n  disabledInput: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n  },\r\n  modal: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    height: \"70%\",\r\n  },\r\n  snackbar: {\r\n    backgroundColor: \"#7d0633\",\r\n  },\r\n  snackbarText: {\r\n    textAlign: \"center\",\r\n  },\r\n  activityIndicator: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}