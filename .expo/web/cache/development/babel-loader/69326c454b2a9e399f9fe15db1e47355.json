{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport AppbarBottom from \"./app/components/AppbarBottom\";\nimport AppBarTop from \"./app/components/AppBarTop\";\nimport configureStore from \"./app/store/store\";\nimport { getDailyreports } from \"./app/api/apiTest\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./app/views/Home\";\nimport Messenger from \"./app/views/Messenger\";\nimport { Ionicons } from \"@expo/vector-icons\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      test = _useState2[0],\n      setTest = _useState2[1];\n\n  useEffect(function () {\n    getDailyreports(\"v3/967cffba-f2e0-4270-b70f-293e7ee895b1\").then(function (response) {\n      setTest(response.data.test);\n    });\n  }, []);\n  return React.createElement(ReduxProvider, {\n    store: configureStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(PaperProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(AppBarTop, {\n    navigation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"ios-information-circle\" : \"ios-information-circle-outline\";\n          } else if (route.name === \"Settings\") {\n            iconName = focused ? \"ios-list-box\" : \"ios-list\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 24\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"tomato\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: Messenger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"gray\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Projects/StudentEssentials/App.js"],"names":["StatusBar","React","useEffect","useState","Provider","PaperProvider","ReduxProvider","AppbarBottom","AppBarTop","configureStore","getDailyreports","NavigationContainer","createBottomTabNavigator","Home","Messenger","Ionicons","Tab","App","test","setTest","then","response","data","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport AppbarBottom from \"./app/components/AppbarBottom\";\nimport AppBarTop from \"./app/components/AppBarTop\";\nimport configureStore from \"./app/store/store\";\nimport { getDailyreports } from \"./app/api/apiTest\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./app/views/Home\";\nimport Messenger from \"./app/views/Messenger\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  const [test, setTest] = useState();\n  useEffect(() => {\n    getDailyreports(\"v3/967cffba-f2e0-4270-b70f-293e7ee895b1\").then(\n      (response) => {\n        setTest(response.data.test);\n        // console.log(response.data);\n      }\n    );\n  }, []);\n\n  return (\n    <ReduxProvider store={configureStore}>\n      <PaperProvider>\n        <NavigationContainer>\n          <AppBarTop navigation />\n          <Tab.Navigator\n            screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                let iconName;\n\n                if (route.name === \"Home\") {\n                  iconName = focused\n                    ? \"ios-information-circle\"\n                    : \"ios-information-circle-outline\";\n                } else if (route.name === \"Settings\") {\n                  iconName = focused ? \"ios-list-box\" : \"ios-list\";\n                }\n\n                // You can return any component that you like here!\n                return <Ionicons name={iconName} size={size} color={color} />;\n              },\n            })}\n            tabBarOptions={{\n              activeTintColor: \"tomato\",\n              inactiveTintColor: \"gray\",\n            }}\n          >\n            <Tab.Screen name=\"Home\" component={Home} />\n            <Tab.Screen name=\"Settings\" component={Messenger} />\n          </Tab.Navigator>\n        </NavigationContainer>\n        {/* <AppbarBottom /> */}\n        <StatusBar style=\"auto\" />\n      </PaperProvider>\n    </ReduxProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"gray\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}