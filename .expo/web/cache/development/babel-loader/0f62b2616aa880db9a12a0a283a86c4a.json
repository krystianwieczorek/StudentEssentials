{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\App.js\";\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport AppbarBottom from \"./app/components/AppbarBottom\";\nimport AppBarTop from \"./app/components/AppBarTop\";\nimport configureStore from \"./app/store/store\";\nimport { getDailyreports } from \"./app/api/apiTest\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./app/views/Home\";\nimport Messenger from \"./app/views/Messenger\";\nimport Login from \"./app/views/Login\";\nimport Register from \"./app/views/Register\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nvar Tab = createBottomTabNavigator();\nvar SettingsStack = createStackNavigator();\n\nvar LoginStackScreen = function LoginStackScreen() {\n  return React.createElement(SettingsStack.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(SettingsStack.Screen, {\n    name: \"Login\",\n    component: Login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(SettingsStack.Screen, {\n    name: \"Register\",\n    component: Register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default function App() {\n  var _this2 = this;\n\n  return React.createElement(ReduxProvider, {\n    store: configureStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(PaperProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n\n          if (route.name === \"Messenger\") {\n            return React.createElement(Ionicons, {\n              name: \"ios-text\",\n              size: 24,\n              color: color,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 26\n              }\n            });\n          } else if (route.name === \"Home\") {\n            return React.createElement(Ionicons, {\n              name: \"md-calendar\",\n              size: 24,\n              color: color,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 21\n              }\n            });\n          } else if (route.name === \"Login\") {\n            return React.createElement(Entypo, {\n              name: \"login\",\n              size: 24,\n              color: color,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 26\n              }\n            });\n          }\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"#1B98E0\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Login\",\n    component: LoginStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Messenger\",\n    component: Messenger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/Projects/StudentEssentials/App.js"],"names":["StatusBar","React","useEffect","useState","Provider","PaperProvider","ReduxProvider","AppbarBottom","AppBarTop","configureStore","getDailyreports","NavigationContainer","createBottomTabNavigator","Home","Messenger","Login","Register","Ionicons","Entypo","createStackNavigator","Tab","SettingsStack","LoginStackScreen","App","route","tabBarIcon","focused","color","size","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport AppbarBottom from \"./app/components/AppbarBottom\";\nimport AppBarTop from \"./app/components/AppBarTop\";\nimport configureStore from \"./app/store/store\";\nimport { getDailyreports } from \"./app/api/apiTest\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Home from \"./app/views/Home\";\nimport Messenger from \"./app/views/Messenger\";\nimport Login from \"./app/views/Login\";\nimport Register from \"./app/views/Register\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nconst Tab = createBottomTabNavigator();\nconst SettingsStack = createStackNavigator();\n\nconst LoginStackScreen = () => {\n  return (\n    <SettingsStack.Navigator>\n      <SettingsStack.Screen name=\"Login\" component={Login} />\n      <SettingsStack.Screen name=\"Register\" component={Register} />\n    </SettingsStack.Navigator>\n  );\n};\n\nexport default function App() {\n  return (\n    <ReduxProvider store={configureStore}>\n      <PaperProvider>\n        <NavigationContainer>\n          {/* <AppBarTop /> */}\n          <Tab.Navigator\n            screenOptions={({ route }) => ({\n              tabBarIcon: ({ focused, color, size }) => {\n                if (route.name === \"Messenger\") {\n                  return <Ionicons name=\"ios-text\" size={24} color={color} />;\n                } else if (route.name === \"Home\") {\n                  return (\n                    <Ionicons name=\"md-calendar\" size={24} color={color} />\n                  );\n                } else if (route.name === \"Login\") {\n                  return <Entypo name=\"login\" size={24} color={color} />;\n                }\n\n                // You can return any component that you like here!\n              },\n            })}\n            tabBarOptions={{\n              activeTintColor: \"#1B98E0\",\n              inactiveTintColor: \"gray\",\n            }}\n          >\n            <Tab.Screen name=\"Login\" component={LoginStackScreen} />\n            <Tab.Screen name=\"Home\" component={Home} />\n            <Tab.Screen name=\"Messenger\" component={Messenger} />\n          </Tab.Navigator>\n        </NavigationContainer>\n        <StatusBar style=\"auto\" />\n      </PaperProvider>\n    </ReduxProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}