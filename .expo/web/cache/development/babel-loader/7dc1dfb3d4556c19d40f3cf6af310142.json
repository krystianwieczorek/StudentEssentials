{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Projects\\\\StudentEssentials\\\\app\\\\views\\\\Register.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { TextInput } from \"react-native-paper\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { Button, Modal, Portal, Provider } from \"react-native-paper\";\nimport { Fontisto } from \"@expo/vector-icons\";\nimport { getAllGroups } from \"../api/getAllGroups\";\nexport default function Register(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      groups = _useState6[0],\n      setGroups = _useState6[1];\n\n  var showModal = function showModal() {\n    return setVisible(true);\n  };\n\n  var hideModal = function hideModal() {\n    return setVisible(false);\n  };\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  useEffect(function () {\n    getAllGroups().then(function (response) {\n      return setGroups(response.data);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Sign up \", React.createElement(Fontisto, {\n    name: \"unlocked\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref2) {\n      var onChange = _ref2.onChange,\n          onBlur = _ref2.onBlur,\n          value = _ref2.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Email\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"email\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Email is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref3) {\n      var onChange = _ref3.onChange,\n          onBlur = _ref3.onBlur,\n          value = _ref3.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"First Name\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"firstName\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Email is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref4) {\n      var onChange = _ref4.onChange,\n          onBlur = _ref4.onBlur,\n          value = _ref4.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Last Name\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"lastName\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), errors.email && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Email is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref5) {\n      var onChange = _ref5.onChange,\n          onBlur = _ref5.onBlur,\n          value = _ref5.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        label: \"Password\",\n        mode: \"outlined\",\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      });\n    },\n    name: \"password\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), errors.password && React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Password is required.\"), React.createElement(Controller, {\n    control: control,\n    render: function render() {\n      return React.createElement(Provider, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, React.createElement(Portal, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, React.createElement(Modal, {\n        visible: visible,\n        onDismiss: hideModal,\n        contentContainerStyle: styles.modal,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, React.createElement(Controller, {\n        control: control,\n        render: function render(_ref6) {\n          var onChange = _ref6.onChange,\n              onBlur = _ref6.onBlur,\n              value = _ref6.value;\n          return React.createElement(Picker, {\n            selectedValue: 2,\n            itemIndex: 2,\n            style: styles.picker,\n            onValueChange: function onValueChange(itemValue, itemIndex) {\n              onChange(itemValue);\n              setSelectedValue(itemValue);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }\n          }, groups.map(function (item, key) {\n            return React.createElement(Picker.Item, {\n              label: item.name,\n              value: item.groupId,\n              key: key,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 25\n              }\n            });\n          }));\n        },\n        name: \"group\",\n        defaultValue: \"\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }))), React.createElement(Button, {\n        mode: \"contained\",\n        style: styles.button,\n        title: \"Submit\",\n        onPress: handleSubmit(onSubmit),\n        onPress: showModal,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, \"Choose Group\"), errors.group && React.createElement(Text, {\n        style: styles.errorMessage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, \"Group is required.\"), React.createElement(Button, {\n        mode: \"contained\",\n        style: styles.buttonSignUp,\n        title: \"Submit\",\n        onPress: handleSubmit(onSubmit),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }, \"Sign Up\"));\n    },\n    name: \"group\",\n    rules: {\n      required: true\n    },\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#e3e3e3\"\n  },\n  text: {\n    textAlign: \"center\",\n    fontSize: 30,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  icon: {\n    textAlign: \"center\"\n  },\n  errorMessage: {\n    marginLeft: 12,\n    color: \"red\"\n  },\n  button: {\n    marginTop: 15,\n    backgroundColor: \"#006494\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  buttonSignUp: {\n    marginTop: 15,\n    backgroundColor: \"#006494\",\n    alignContent: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    width: \"95%\"\n  },\n  signUp: {\n    marginTop: 15,\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  },\n  disabledInput: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10\n  },\n  modal: {\n    backgroundColor: \"white\",\n    padding: 10\n  }\n});","map":{"version":3,"sources":["D:/Projects/StudentEssentials/app/views/Register.js"],"names":["React","useEffect","useState","TextInput","FontAwesome","useForm","Controller","Button","Modal","Portal","Provider","Fontisto","getAllGroups","Register","navigation","selectedValue","setSelectedValue","visible","setVisible","groups","setGroups","showModal","hideModal","onSubmit","data","console","log","control","handleSubmit","errors","then","response","styles","container","text","onChange","onBlur","value","input","email","errorMessage","password","modal","picker","itemValue","itemIndex","map","item","key","name","groupId","button","group","buttonSignUp","required","StyleSheet","create","width","height","backgroundColor","textAlign","fontSize","marginTop","marginBottom","icon","marginLeft","color","alignContent","marginRight","signUp","padding","borderRadius","disabledInput"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Alert, StyleSheet, Text, View, Picker } from \"react-native\";\r\nimport { TextInput } from \"react-native-paper\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Button, Modal, Portal, Provider } from \"react-native-paper\";\r\nimport { Fontisto } from \"@expo/vector-icons\";\r\nimport { getAllGroups } from \"../api/getAllGroups\";\r\n\r\nexport default function Register({ navigation }) {\r\n  const [selectedValue, setSelectedValue] = useState();\r\n  const [visible, setVisible] = useState(false);\r\n  const [groups, setGroups] = useState();\r\n  const showModal = () => setVisible(true);\r\n  const hideModal = () => setVisible(false);\r\n  const onSubmit = (data) => console.log(data);\r\n  const { control, handleSubmit, errors } = useForm();\r\n\r\n  useEffect(() => {\r\n    getAllGroups().then((response) => setGroups(response.data));\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>\r\n        Sign up <Fontisto name=\"unlocked\" size={24} color=\"black\" />\r\n      </Text>\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Email\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"email\"\r\n        // rules={{ required: true, pattern: /^\\S+@\\S+\\.\\S+$/ }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.email && (\r\n        <Text style={styles.errorMessage}>Email is required.</Text>\r\n      )}\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"First Name\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"firstName\"\r\n        // rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.email && (\r\n        <Text style={styles.errorMessage}>Email is required.</Text>\r\n      )}\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Last Name\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"lastName\"\r\n        // rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.email && (\r\n        <Text style={styles.errorMessage}>Email is required.</Text>\r\n      )}\r\n      <Controller\r\n        control={control}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <TextInput\r\n            style={styles.input}\r\n            label=\"Password\"\r\n            mode=\"outlined\"\r\n            onBlur={onBlur}\r\n            onChangeText={(value) => onChange(value)}\r\n            value={value}\r\n          />\r\n        )}\r\n        name=\"password\"\r\n        // rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n      {errors.password && (\r\n        <Text style={styles.errorMessage}>Password is required.</Text>\r\n      )}\r\n\r\n      <Controller\r\n        control={control}\r\n        render={() => (\r\n          <Provider>\r\n            <Portal>\r\n              <Modal\r\n                visible={visible}\r\n                onDismiss={hideModal}\r\n                contentContainerStyle={styles.modal}\r\n              >\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, onBlur, value }) => (\r\n                    <Picker\r\n                      selectedValue={2}\r\n                      itemIndex={2}\r\n                      style={styles.picker}\r\n                      onValueChange={(itemValue, itemIndex) => {\r\n                        onChange(itemValue);\r\n                        setSelectedValue(itemValue);\r\n                      }}\r\n                    >\r\n                      {groups.map((item, key) => (\r\n                        <Picker.Item\r\n                          label={item.name}\r\n                          value={item.groupId}\r\n                          key={key}\r\n                        />\r\n                      ))}\r\n                    </Picker>\r\n                  )}\r\n                  name=\"group\"\r\n                  defaultValue=\"\"\r\n                />\r\n              </Modal>\r\n            </Portal>\r\n            <Button\r\n              mode=\"contained\"\r\n              style={styles.button}\r\n              title=\"Submit\"\r\n              onPress={handleSubmit(onSubmit)}\r\n              onPress={showModal}\r\n            >\r\n              Choose Group\r\n            </Button>\r\n            {errors.group && (\r\n              <Text style={styles.errorMessage}>Group is required.</Text>\r\n            )}\r\n            <Button\r\n              mode=\"contained\"\r\n              style={styles.buttonSignUp}\r\n              title=\"Submit\"\r\n              onPress={handleSubmit(onSubmit)}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Provider>\r\n        )}\r\n        name=\"group\"\r\n        rules={{ required: true }}\r\n        defaultValue=\"\"\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#e3e3e3\",\r\n  },\r\n  text: {\r\n    textAlign: \"center\",\r\n    fontSize: 30,\r\n    marginTop: 20,\r\n    marginBottom: 10,\r\n  },\r\n  icon: {\r\n    textAlign: \"center\",\r\n  },\r\n  errorMessage: {\r\n    marginLeft: 12,\r\n    color: \"red\",\r\n  },\r\n  button: {\r\n    marginTop: 15,\r\n    backgroundColor: \"#006494\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  buttonSignUp: {\r\n    marginTop: 15,\r\n    backgroundColor: \"#006494\",\r\n    alignContent: \"center\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    width: \"95%\",\r\n  },\r\n  signUp: {\r\n    marginTop: 15,\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n  disabledInput: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n  },\r\n  modal: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}